{
    "_id": "6duZj0Ygiqv712rq",
    "actorIds": [],
    "author": "gE95JAZb6BOLkaNX",
    "command": "const toChat = (content, rollString) => {\n  const chatData = {\n    user: game.user.id,\n    content,\n    speaker: ChatMessage.getSpeaker(),\n  };\n  ChatMessage.create(chatData, {});\n  if (rollString) {\n    const rollResult = new Roll(rollString).roll();\n    const rollChatData = {\n      ...chatData,\n      flavor: \"Treat Wounds\",\n      type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n      roll: rollResult\n    };\n    ChatMessage.create(rollChatData, {});\n  }\n};\n\nconst handleCrits = (roll) => roll === 1  ? -1 :\n      roll === 20 ? 1  :\n      0;\n\nconst rollTreatWounds = (args) => {\n  const {DC, bonus, med, name} = args;\n  const baseResult = new Roll(\"1d20\").roll().total;\n  const modifiedResult = baseResult + med.value;\n\n  const message = (`${name} rolls to Treats Wounds at a DC ${DC}. `\n                   + `They roll a [[${baseResult}+${med.value}]] and`);\n\n  const crit = handleCrits(baseResult);\n  const success = modifiedResult >= DC + 10 ? 2 + crit  :\n                  modifiedResult >= DC      ? 1 + crit  :\n                  modifiedResult <= DC - 10 ? -1 + crit :\n                  0 + crit;\n\n  if (success > 1) {\n    toChat(`${message} critically succeed!`, `4d8+${bonus}`);\n  } else if (success === 1) {\n    toChat(`${message} succeed.`, `2d8+${bonus}`);\n  } else if (success < 0) {\n    toChat(`${message} critically fail! The target takes damage.`, '1d8');\n  } else if (success === 0) {\n    toChat(`${message} fail.`);\n  }\n};\n\nconst applyChanges = ($html) => {\n  for (const token of canvas.tokens.controlled) {\n    const {med} = token.actor.data.data.skills;\n    const {name} = token;\n    const mod = parseInt($html.find('[name=\"modifier\"]')[0].value) || 0;\n    const requestedProf = parseInt($html.find('[name=\"dc-type\"]')[0].value) || 1;\n    const usedProf = requestedProf <= med.rank ? requestedProf : med.rank;\n    const roll = [\n      () => toChat(`${name} is not trained in Medicine and doesn't know how to treat wounds!`),\n      () => rollTreatWounds({DC: 15 + mod, bonus: 0, med, name}),\n      () => rollTreatWounds({DC: 20 + mod, bonus: 0, med, name}),\n      () => rollTreatWounds({DC: 30 + mod, bonus: 0, med, name}),\n      () => rollTreatWounds({DC: 40 + mod, bonus: 0, med, name})\n    ][usedProf];\n\n    roll();\n  }\n};\n\nnew Dialog({\n  title: \"Treat Wounds\",\n  content: `\n    <div>Select a target DC. Remember that you can't attempt a heal above your proficiency. Attempting to do so will downgrade the DC and amount healed to the highest you're capable of.</div>\n    <hr/>\n    <form>\n      <div class=\"form-group\">\n        <label>Medicine DC:</label>\n        <select id=\"dc-type\" name=\"dc-type\">\n          <option value=\"1\">Trained DC 15</option>\n          <option value=\"2\">Expert DC 20, +10 Healing</option>\n          <option value=\"3\">Master DC 30, +30 Healing</option>\n          <option value=\"4\">Legendary DC 40, +50 Healing</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>DC Modifier:</label>\n        <input id=\"modifier\" name=\"modifier\" type=\"number\"/>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: `<i class=\"fas fa-hand-holding-medical\"></i>`,\n      label: \"Treat Wounds\",\n      callback: applyChanges\n    },\n    no: {\n      icon: `<i class=\"fas fa-times\"></i>`,\n      label: \"Cancel\"\n    },\n  },\n  default: \"yes\"\n}).render(true);",
    "flags": {},
    "img": "icons/svg/regen.svg",
    "name": "Treat Wounds Macro",
    "permission": {
        "default": 0
    },
    "scope": "global",
    "type": "script"
}
